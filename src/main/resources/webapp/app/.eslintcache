[{"F:\\ReactJS Project\\training-level-classification\\src\\index.jsx":"1","F:\\ReactJS Project\\training-level-classification\\src\\App.jsx":"2","F:\\ReactJS Project\\training-level-classification\\src\\reportWebVitals.jsx":"3","F:\\ReactJS Project\\training-level-classification\\src\\components\\athlete.js":"4","F:\\ReactJS Project\\training-level-classification\\src\\components\\criteria.jsx":"5","F:\\ReactJS Project\\training-level-classification\\src\\components\\classification-table.jsx":"6","F:\\ReactJS Project\\training-level-classification\\src\\components\\athlete-classification.jsx":"7","F:\\ReactJS Project\\training-level-classification\\src\\components\\rankings.jsx":"8","F:\\ReactJS Project\\training-level-classification\\src\\components\\factors\\physical.jsx":"9","F:\\ReactJS Project\\training-level-classification\\src\\components\\factors\\technical .jsx":"10","F:\\ReactJS Project\\training-level-classification\\src\\components\\factors\\psychophysiology.jsx":"11","F:\\ReactJS Project\\training-level-classification\\src\\components\\factors\\form.jsx":"12","F:\\ReactJS Project\\training-level-classification\\src\\components\\layout\\header\\header.jsx":"13","F:\\ReactJS Project\\training-level-classification\\src\\components\\layout\\header\\header-components.jsx":"14","F:\\ReactJS Project\\training-level-classification\\src\\components\\layout\\footer\\footer.jsx":"15"},{"size":829,"mtime":1614403638825,"results":"16","hashOfConfig":"17"},{"size":1255,"mtime":1614195958540,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1611600649490,"results":"19","hashOfConfig":"17"},{"size":4953,"mtime":1612575581759,"results":"20","hashOfConfig":"17"},{"size":14608,"mtime":1614199264111,"results":"21","hashOfConfig":"17"},{"size":983,"mtime":1614199279727,"results":"22","hashOfConfig":"17"},{"size":1231,"mtime":1614198254186,"results":"23","hashOfConfig":"17"},{"size":1231,"mtime":1614198305794,"results":"24","hashOfConfig":"17"},{"size":2505,"mtime":1614198355473,"results":"25","hashOfConfig":"17"},{"size":1278,"mtime":1614198369267,"results":"26","hashOfConfig":"17"},{"size":1602,"mtime":1614198361826,"results":"27","hashOfConfig":"17"},{"size":1206,"mtime":1614198342796,"results":"28","hashOfConfig":"17"},{"size":2064,"mtime":1614197177230,"results":"29","hashOfConfig":"17"},{"size":543,"mtime":1614225980410,"results":"30","hashOfConfig":"17"},{"size":539,"mtime":1614195737853,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1rkjdkk",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"F:\\ReactJS Project\\training-level-classification\\src\\index.jsx",["74","75","76","77"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport Header from \"./components/layout/header/header\";\nimport Footer from \"./components/layout/footer/footer\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    {/* <Provider> */}\n      <App/>\n    {/* </Provider> */}\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["78","79"],"F:\\ReactJS Project\\training-level-classification\\src\\App.jsx",[],"F:\\ReactJS Project\\training-level-classification\\src\\reportWebVitals.jsx",[],"F:\\ReactJS Project\\training-level-classification\\src\\components\\athlete.js",[],"F:\\ReactJS Project\\training-level-classification\\src\\components\\criteria.jsx",["80"],"import { render } from \"@testing-library/react\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Col, Form, FormGroup, Input, Label, Row} from \"reactstrap\";\r\nimport Athlete from './athlete';\r\nimport ClassificationTable from \"./classification-table\";\r\nimport { connect } from 'react-redux';\r\n\r\nexport default function Criteria(props) {\r\n\r\n    const [isHide, setIsHide] = useState(false);\r\n    const [numericalOrder, setNumericalOrder] = useState(0);\r\n    // const [athleteId, setAthleteId] = useState('');\r\n    const [athleteName, setAthleteName] = useState('');\r\n\r\n    const [timeOfReflectionStart, setTimeOfReflectionStart] = useState('');\r\n    const [thirtyMetersRunAtHighSpeed, setThirtyMetersRunAtHighSpeed] = useState('');\r\n    const [thirtyMetersRunWithLowStart, setThirtyMetersRunWithLowStart] = useState('');\r\n    const [sixtyMetersRunWithLowStart, setSixtyMetersRunWithLowStart] = useState('');\r\n    const [eightyMetersRunWithHighStart, setEightyMetersRunWithHighStart] = useState('');\r\n    const [oneHundredFiftyMetersRunWithHighStart, setOneHundredFiftyMetersRunWithHighStart] = useState('');\r\n    const [runTimeOfLastTwentyMetersInOneHundredMetersRun, setRunTimeOfLastTwentyMetersInOneHundredMetersRun] = useState('');\r\n    const [strengthCoefficient_K, setStrengthCoefficient_K] = useState('');\r\n    const [awayJumpInPlace, setAwayJumpInPlace] = useState('');\r\n    const [threeStepsJumpInPlace, setThreeStepsJumpInPlace] = useState('');\r\n    const [tenStepsJumpInPlace, setTenStepsJumpInPlace] = useState('');\r\n    const [performanceDifferenceBetweenThirtyMetersRunWithLowStartAndThirtyMetersRunAtHighSpeed, setPerformanceDifferenceBetweenThirtyMetersRunWithLowStartAndThirtyMetersRunAtHighSpeed] = useState('');\r\n    const [singleReflectionTime, setSingleReflectionTime] = useState('');\r\n    const [livingCapacityQuotient, setLivingCapacityQuotient] = useState('');\r\n    const [restoredHeartRateAtThirtySecondsAfterOneHundredMetersRun, setRestoredHeartRateAtThirtySecondsAfterOneHundredMetersRun] = useState('');\r\n    const [lacticAcidContentAfterOneHundredMetersRun, setLacticAcidContentAfterOneHundredMetersRun] = useState('');\r\n    const [thighsRaiseInPlaceForTenSeconds, setThighsRaiseInPlaceForTenSeconds] = useState('');\r\n    const [queteletQuotient, setQueteletQuotient] = useState('');\r\n\r\n    if (isHide) {\r\n      return null;\r\n    }\r\n\r\n    // const handleAthleteId = event => setAthleteId(event.target.value);\r\n    const handleAthleteName = event => setAthleteName(event.target.value);\r\n\r\n    const handleTimeOfReflectionStart = event => setTimeOfReflectionStart(event.target.value);\r\n    const handleThirtyMetersRunAtHighSpeed = event => setThirtyMetersRunAtHighSpeed(event.target.value);\r\n    const handleThirtyMetersRunWithLowStart = event => setThirtyMetersRunWithLowStart(event.target.value);\r\n    const handleSixtyMetersRunWithLowStart = event => setSixtyMetersRunWithLowStart(event.target.value);\r\n    const handleEightyMetersRunWithHighStart = event => setEightyMetersRunWithHighStart(event.target.value);\r\n    const handleOneHundredFiftyMetersRunWithHighStart = event => setOneHundredFiftyMetersRunWithHighStart(event.target.value);\r\n    const handleRunTimeOfLastTwentyMetersInOneHundredMetersRun = event => setRunTimeOfLastTwentyMetersInOneHundredMetersRun(event.target.value);\r\n    const handleStrengthCoefficient_K = event => setStrengthCoefficient_K(event.target.value);\r\n    const handleAwayJumpInPlace = event => setAwayJumpInPlace(event.target.value);\r\n    const handleThreeStepsJumpInPlace = event => setThreeStepsJumpInPlace(event.target.value);\r\n    const handleTenStepsJumpInPlace = event => setTenStepsJumpInPlace(event.target.value);\r\n    const handlePerformanceDifferenceBetweenThirtyMetersRunWithLowStartAndThirtyMetersRunAtHighSpeed = event => setPerformanceDifferenceBetweenThirtyMetersRunWithLowStartAndThirtyMetersRunAtHighSpeed(event.target.value);\r\n    const handleSingleReflectionTime = event => setSingleReflectionTime(event.target.value);\r\n    const handleLivingCapacityQuotient = event => setLivingCapacityQuotient(event.target.value);\r\n    const handleRestoredHeartRateAtThirtySecondsAfterOneHundredMetersRun = event => setRestoredHeartRateAtThirtySecondsAfterOneHundredMetersRun(event.target.value);\r\n    const handleLacticAcidContentAfterOneHundredMetersRun = event => setLacticAcidContentAfterOneHundredMetersRun(event.target.value);\r\n    const handleThighsRaiseInPlaceForTenSeconds = event => setThighsRaiseInPlaceForTenSeconds(event.target.value);\r\n    const handleQueteletQuotient = event => setQueteletQuotient(event.target.value);\r\n\r\n    const handleReset = () => {\r\n      // setAthleteId(\"\");\r\n      setAthleteName(\"\");\r\n      setTimeOfReflectionStart(\"\");\r\n      setThirtyMetersRunAtHighSpeed(\"\");\r\n      setThirtyMetersRunWithLowStart(\"\");\r\n      setSixtyMetersRunWithLowStart(\"\");\r\n      setEightyMetersRunWithHighStart(\"\");\r\n      setOneHundredFiftyMetersRunWithHighStart(\"\");\r\n      setRunTimeOfLastTwentyMetersInOneHundredMetersRun(\"\");\r\n      setStrengthCoefficient_K(\"\");\r\n      setAwayJumpInPlace(\"\");\r\n      setThreeStepsJumpInPlace(\"\");\r\n      setTenStepsJumpInPlace(\"\");\r\n      setPerformanceDifferenceBetweenThirtyMetersRunWithLowStartAndThirtyMetersRunAtHighSpeed(\"\");\r\n      setSingleReflectionTime(\"\");\r\n      setLivingCapacityQuotient(\"\");\r\n      setRestoredHeartRateAtThirtySecondsAfterOneHundredMetersRun(\"\");\r\n      setLacticAcidContentAfterOneHundredMetersRun(\"\");\r\n      setThighsRaiseInPlaceForTenSeconds(\"\");\r\n      setQueteletQuotient(\"\");\r\n    } \r\n\r\n    const {athletesCount} = props;\r\n    var newAthletesList =  [];\r\n    localStorage.removeItem(\"newAthletesList\");\r\n\r\n    const handleNext = () => {\r\n      var temp =  document.getElementsByName(\"criteria\");\r\n      var criterias = [];\r\n      for (var i = 0; i < temp.length; i++) {\r\n        criterias.push(temp[i].value);\r\n      }\r\n      newAthletesList[numericalOrder] = {name: athleteName, totalScoresOfCriterias: 0, grade: null, rank: null, criteriasList: criterias};\r\n      localStorage.setItem(`newAthletesList[${numericalOrder}]`, JSON.stringify(newAthletesList[numericalOrder]));\r\n      if (numericalOrder < athletesCount - 1) setNumericalOrder(numericalOrder + 1);\r\n      handleReset();\r\n    }\r\n\r\n    const handleClassify = () => {\r\n      handleNext();\r\n      for (let i = 0; i < athletesCount; i++) {\r\n        newAthletesList[i] = JSON.parse(localStorage.getItem(`newAthletesList[${i}]`));\r\n      }\r\n      localStorage.setItem(\"newAthletesList\", JSON.stringify(newAthletesList));\r\n      Athlete.classifyTrainingLevel();\r\n      let athletesList = JSON.parse(localStorage.getItem(\"athletesList\"));\r\n      for (let i = 0; i < newAthletesList.length; i++) {\r\n        for (let j = 0; j < athletesList.length; j++) {\r\n          if (newAthletesList[i].name === athletesList[j].name) {\r\n            newAthletesList[i].totalScoresOfCriterias = athletesList[j].totalScoresOfCriterias;\r\n            newAthletesList[i].grade = athletesList[j].grade;\r\n            newAthletesList[i].rank = athletesList[j].rank;\r\n          }\r\n        }\r\n      }\r\n      setIsHide(true);\r\n      render(<ClassificationTable newAthletesList={newAthletesList}/>)\r\n    }\r\n\r\n    var button;\r\n    if (numericalOrder < athletesCount - 1) {\r\n      button = <Button id=\"btn-next\" size=\"sm\" onClick={handleNext} >Tiếp theo</Button>; \r\n    }\r\n    else button = <Button id=\"btn-classify\" size=\"sm\" onClick={handleClassify} >Phân loại</Button>;\r\n\r\n      return (\r\n        <div className=\"padding-title-title\">\r\n          <h2>Vận động viên thứ {numericalOrder + 1}</h2>\r\n          &nbsp;\r\n          <Form className=\"athlete-criteria\">\r\n            <FormGroup>\r\n              <Row className=\"athlete-info\">\r\n                <Col md=\"6\">\r\n                  <Label for=\"athlete-name\">Tên vận động viên</Label>\r\n                  <Input type=\"text\" id=\"athlete-name\" name=\"athlete-name\" value={athleteName} onChange={handleAthleteName} />\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-time-of-reflection-start\">1. Thời gian phản xạ xuất phát (s)</Label>\r\n              <Input type=\"text\" id=\"time-of-reflection-start\" name=\"criteria\" value={timeOfReflectionStart} onChange={handleTimeOfReflectionStart} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-thirty-meters-run-at-high-speed\">2. Chạy 30m tốc độ cao (s)</Label>\r\n              <Input type=\"text\" id=\"thirty-meters-run-at-high-speed\" name=\"criteria\" value={thirtyMetersRunAtHighSpeed} onChange={handleThirtyMetersRunAtHighSpeed} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-thirty-meters-run-with-low-start\">3. Chạy 30m xuất phát thấp (s)</Label>\r\n              <Input type=\"text\" id=\"thirty-meters-run-with-low-start\" name=\"criteria\" value={thirtyMetersRunWithLowStart} onChange={handleThirtyMetersRunWithLowStart} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-sixty-meters-run-with-low-start\">4. Chạy 60m xuất phát thấp (s)</Label>\r\n              <Input type=\"text\" id=\"sixty-meters-run-with-low-start\" name=\"criteria\" value={sixtyMetersRunWithLowStart} onChange={handleSixtyMetersRunWithLowStart} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-eighty-meters-run-with-high-start\">5. Chạy 80m xuất phát cao (s)</Label>\r\n              <Input type=\"text\" id=\"eighty-meters-run-with-high-start\" name=\"criteria\" value={eightyMetersRunWithHighStart} onChange={handleEightyMetersRunWithHighStart} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-one-hundred-fifty-meters-run-with-high-start\">6. Chạy 150m xuất phát cao (s)</Label>\r\n              <Input type=\"text\" id=\"one-hundred-fifty-meters-run-with-high-start\" name=\"criteria\" value={oneHundredFiftyMetersRunWithHighStart} onChange={handleOneHundredFiftyMetersRunWithHighStart} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-away-jump-in-place\">7. Bật xa tại chỗ (m)</Label>\r\n              <Input type=\"text\" id=\"away-jump-in-place\" name=\"criteria\" value={awayJumpInPlace} onChange={handleAwayJumpInPlace} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"three-steps-jump-in-place\">8. Bật 3 bước tại chỗ (m)</Label>\r\n              <Input type=\"text\" id=\"three-steps-jump-in-place\" name=\"criteria\" value={threeStepsJumpInPlace} onChange={handleThreeStepsJumpInPlace} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-ten-steps-jump-in-place\">9. Bật 10 bước tại chỗ (m)</Label>\r\n              <Input type=\"text\" id=\"ten-steps-jump-in-place\" name=\"criteria\" value={tenStepsJumpInPlace} onChange={handleTenStepsJumpInPlace} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-run-time-of-last-twenty-meters-in-one-hundred-meters-run\">10. Thời gian của 20m cuối trong chạy 100m (s)</Label>\r\n              <Input type=\"text\" id=\"run-time-of-last-twenty-meters-in-one-hundred-meters-run\" name=\"criteria\" value={runTimeOfLastTwentyMetersInOneHundredMetersRun} onChange={handleRunTimeOfLastTwentyMetersInOneHundredMetersRun} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-strength-coefficient-K\">11. Hệ số sức bền K (s)</Label>\r\n              <Input type=\"text\" id=\"strength-coefficient-K\" name=\"criteria\" value={strengthCoefficient_K} onChange={handleStrengthCoefficient_K} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-thighs-raise-in-place-for-ten-seconds\">12. Nâng cao đùi tại chỗ 10s (lần)</Label>\r\n              <Input type=\"text\" id=\"thighs-raise-in-place-for-ten-seconds\" name=\"criteria\" value={lacticAcidContentAfterOneHundredMetersRun} onChange={handleLacticAcidContentAfterOneHundredMetersRun} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-performance-difference-between-thirty-meters-run-with-low-start-and-thirty-meters-run-at-high-speed\">13. Hiệu số thành tích chạy 30m xuất phát thấp với chạy 30m tốc độ cao (s)</Label>\r\n              <Input type=\"text\" id=\"performance-difference-between-thirty-meters-run-with-low-start-and-thirty-meters-run-at-high-speed\" name=\"criteria\" value={performanceDifferenceBetweenThirtyMetersRunWithLowStartAndThirtyMetersRunAtHighSpeed} onChange={handlePerformanceDifferenceBetweenThirtyMetersRunWithLowStartAndThirtyMetersRunAtHighSpeed} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-single-reflection-time\">14. Thời gian phản xạ đơn (s)</Label>\r\n              <Input type=\"text\" id=\"single-reflection-time\" name=\"criteria\" value={singleReflectionTime} onChange={handleSingleReflectionTime} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-living-capacity-quotient\">15. Chỉ số dung tích sống (ml/kg)</Label>\r\n              <Input type=\"text\" id=\"living-capacity-quotient\" name=\"criteria\" value={livingCapacityQuotient} onChange={handleLivingCapacityQuotient} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-restored-heart-rate-at-thirty-seconds-after-one-hundred-meters-run\">16. Tần số tim hồi phục 30s sau chạy 100m (lần/phút)</Label>\r\n              <Input type=\"text\" id=\"restored-heart-rate-at-thirty-seconds-after-one-hundred-meters-run\" name=\"criteria\" value={restoredHeartRateAtThirtySecondsAfterOneHundredMetersRun} onChange={handleRestoredHeartRateAtThirtySecondsAfterOneHundredMetersRun} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-lactic-acid-content-after-one-hundred-meters-run\">17. Hàm lượng axit lactic sau chạy 100m (mmol/lít)</Label>\r\n              <Input type=\"text\" id=\"lactic-acid-content-after-one-hundred-meters-run\" name=\"criteria\" value={thighsRaiseInPlaceForTenSeconds} onChange={handleThighsRaiseInPlaceForTenSeconds} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"criteria-quetelet-quotient\">18. Chỉ số Quetelet (g/cm)</Label>\r\n              <Input type=\"text\" id=\"quetelet-quotient\" name=\"criteria\" value={queteletQuotient} onChange={handleQueteletQuotient} />\r\n            </FormGroup>\r\n            {button}\r\n          </Form>\r\n      </div>\r\n      );\r\n\r\n}\r\n\r\n","F:\\ReactJS Project\\training-level-classification\\src\\components\\classification-table.jsx",[],["81","82"],"F:\\ReactJS Project\\training-level-classification\\src\\components\\athlete-classification.jsx",["83"],"import React, { useState } from \"react\";\r\nimport { render } from \"@testing-library/react\";\r\nimport { Button, Container, Form, Input, Label } from \"reactstrap\";\r\n\r\nimport Criteria from './criteria';\r\n\r\nexport default function AthleteClassification(props) {\r\n\r\n    const [isHide, setIsHide] = useState(false);\r\n    const [athletesCount, setAthletesCount] = useState('');\r\n\r\n    if (isHide) {\r\n      return null;\r\n    }\r\n\r\n    const handleAthletesCount = event => setAthletesCount(event.target.value);\r\n\r\n    const handleNext = () => {\r\n        localStorage.setItem(\"athletesCount\", JSON.stringify(athletesCount));\r\n        setIsHide(true);\r\n        render(<Criteria athletesCount={athletesCount}/>);\r\n    }\r\n    \r\n    return (\r\n      <div className=\"padding-title\">\r\n        <h2>Phân loại trình độ tập luyện của các VĐV chạy 100m cấp cao</h2>\r\n        &nbsp;\r\n          <Form className=\"athlete-count\">\r\n            <Label>Số vận động viên</Label>\r\n            <Input type=\"text\" name=\"athletes-count\" value={athletesCount} onChange={handleAthletesCount} />\r\n            <Button id=\"btn-next\" color=\"info\" size=\"sm\" onClick={handleNext} >Tiếp theo</Button>\r\n          </Form>\r\n      </div>\r\n    );\r\n}\r\n\r\n","F:\\ReactJS Project\\training-level-classification\\src\\components\\rankings.jsx",["84"],"import { render } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport {Container, Table} from \"reactstrap\";\r\n\r\nexport default function Rankings(props) {\r\n\r\n    const athletesList = JSON.parse(localStorage.getItem(\"athletesList\"));\r\n    // const {athletesList} = props;\r\n    return(\r\n        <div className=\"padding-title\">\r\n        <h2>Bảng xếp hạng trình độ tập luyện</h2>\r\n        <Container className=\"container-border\">\r\n          <Table className=\"table\" hover>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Tên vận động viên</th>\r\n                <th>Tổng điểm</th>\r\n                <th>Xếp loại</th>\r\n                <th>Xếp hạng</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {athletesList.map((athlete, i) => (\r\n                <tr>\r\n                  <td>{i + 1}</td>\r\n                  <td>{athlete.name}</td>\r\n                  <td>{athlete.totalScoresOfCriterias}</td>\r\n                  <td>{athlete.grade}</td>\r\n                  <td>{athlete.rank}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div> \r\n    );\r\n}","F:\\ReactJS Project\\training-level-classification\\src\\components\\factors\\physical.jsx",["85"],"import { render } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport {Container, Table} from \"reactstrap\";\r\n\r\nexport default function Physical(props) {\r\n\r\n    const athletesList = JSON.parse(localStorage.getItem(\"athletesList\"));\r\n\r\n    // const {athletesList} = props;\r\n    return(\r\n        <div className=\"padding-title\">\r\n        <h2>Yếu tố thể lực</h2>\r\n        <Container className=\"container-border\">\r\n          <Table className=\"table\" responsive hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Số thứ tự</th>\r\n                <th>Tên vận động viên</th>\r\n                <th>Thời gian phản xạ xuất phát (s)</th>\r\n                <th>Chạy 30m tốc độ cao (s)</th>\r\n                <th>Chạy 30m xuất phát thấp (s)</th>\r\n                <th>Chạy 60m xuất phát thấp (s)</th>\r\n                <th>Chạy 80m xuất phát cao (s)</th>\r\n                <th>Chạy 150m xuất phát cao (s)</th>\r\n                <th>Bật xa tại chỗ (m)</th>\r\n                <th>Bật 3 bước tại chỗ (m)</th>\r\n                <th>Bật 10 bước tại chỗ (m)</th>\r\n                <th>Thời gian chạy 20m cuối trong chạy 100m (s)</th>\r\n                <th>Hệ số sức bền K (s)</th>\r\n                <th>Nâng cao đùi tại chỗ 10s (lần)</th>\r\n                <th>Ngày tạo</th>\r\n                <th>Cập nhật lần cuối</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {athletesList.map((athlete, i) => (\r\n                <tr>\r\n                  <td>{i + 1}</td>\r\n                  <td>{athlete.name}</td>\r\n                  <td>{athlete.criteriasList[0]}</td>\r\n                  <td>{athlete.criteriasList[1]}</td>\r\n                  <td>{athlete.criteriasList[2]}</td>\r\n                  <td>{athlete.criteriasList[3]}</td>\r\n                  <td>{athlete.criteriasList[4]}</td>\r\n                  <td>{athlete.criteriasList[5]}</td>\r\n                  <td>{athlete.criteriasList[6]}</td>\r\n                  <td>{athlete.criteriasList[7]}</td>\r\n                  <td>{athlete.criteriasList[8]}</td>\r\n                  <td>{athlete.criteriasList[9]}</td>\r\n                  <td>{athlete.criteriasList[10]}</td>\r\n                  <td>{athlete.criteriasList[11]}</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div> \r\n    );\r\n}","F:\\ReactJS Project\\training-level-classification\\src\\components\\factors\\technical .jsx",["86"],"import { render } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport {Container, Table} from \"reactstrap\";\r\n\r\nexport default function Technical(props) {\r\n\r\n    const athletesList = JSON.parse(localStorage.getItem(\"athletesList\"));\r\n    // const {athletesList} = props;\r\n    return(\r\n        <div className=\"padding-title\">\r\n        <h2>Yếu tố kỹ thuật</h2>\r\n        <Container className=\"container-border\">\r\n          <Table className=\"table\" hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Số thứ tự</th>\r\n                <th>Tên vận động viên</th>\r\n                <th>Hiệu số thành tích chạy 30m xuất phát thấp với chạy 30m tốc độ cao (s)</th>\r\n                <th>Ngày tạo</th>\r\n                <th>Cập nhật lần cuối</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {athletesList.map((athlete, i) => (\r\n                <tr>\r\n                  <td>{i + 1}</td>\r\n                  <td>{athlete.name}</td>\r\n                  <td>{athlete.criteriasList[12]}</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div> \r\n    );\r\n}","F:\\ReactJS Project\\training-level-classification\\src\\components\\factors\\psychophysiology.jsx",["87"],"import { render } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport {Container, Table} from \"reactstrap\";\r\n\r\nexport default function Psychophysiology(props) {\r\n\r\n    const athletesList = JSON.parse(localStorage.getItem(\"athletesList\"));\r\n    // const {athletesList} = props;\r\n    return(\r\n        <div className=\"padding-title\">\r\n        <h2>Yếu tố tâm-sinh lý</h2>\r\n        <Container className=\"container-border\">\r\n          <Table className=\"table\" hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Số thứ tự</th>\r\n                <th>Tên vận động viên</th>\r\n                <th>Phản xạ đơn (s)</th>\r\n                <th>Chỉ số dung tích sống (ml/kg)</th>\r\n                <th>Tần số tim hồi phục 30s sau chạy 100m (lần/ph)</th>\r\n                <th>Hàm lượng LA sau chạy 100m (mmol/lít)</th>\r\n                <th>Ngày tạo</th>\r\n                <th>Cập nhật lần cuối</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {athletesList.map((athlete, i) => (\r\n                <tr>\r\n                  <td>{i + 1}</td>\r\n                  <td>{athlete.name}</td>\r\n                  <td>{athlete.criteriasList[13]}</td>\r\n                  <td>{athlete.criteriasList[14]}</td>\r\n                  <td>{athlete.criteriasList[15]}</td>\r\n                  <td>{athlete.criteriasList[16]}</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div> \r\n    );\r\n}","F:\\ReactJS Project\\training-level-classification\\src\\components\\factors\\form.jsx",["88"],"import { render } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport {Container, Table} from \"reactstrap\";\r\n\r\nexport default function Form(props) {\r\n\r\n    const athletesList = JSON.parse(localStorage.getItem(\"athletesList\"));\r\n    // const {athletesList} = props;\r\n    return(\r\n        <div className=\"padding-title\">\r\n        <h2>Yếu tố hình thái</h2>\r\n        <Container className=\"container-border\">\r\n          <Table className=\"table\" hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Số thứ tự</th>\r\n                <th>Tên vận động viên</th>\r\n                <th>Chỉ số Quetelet (g/cm)</th>\r\n                <th>Ngày tạo</th>\r\n                <th>Cập nhật lần cuối</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {athletesList.map((athlete, i) => (\r\n                <tr>\r\n                  <td>{i + 1}</td>\r\n                  <td>{athlete.name}</td>\r\n                  <td>{athlete.criteriasList[17]}</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div> \r\n    );\r\n}","F:\\ReactJS Project\\training-level-classification\\src\\components\\layout\\header\\header.jsx",["89","90","91","92","93","94"],"import React, { useState } from \"react\";\r\nimport { Col, Collapse, DropdownItem, DropdownMenu, DropdownToggle, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink, Row, UncontrolledButtonDropdown, UncontrolledDropdown } from \"reactstrap\";\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport {Brand, Home} from './header-components';\r\nimport \"./header.css\";\r\n\r\nexport default function Header(props) {\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n    const toggleMenu = () => setMenuOpen(!menuOpen);\r\n\r\n    return(\r\n        <div className=\"header\">\r\n            <Navbar color=\"dark\" fixed=\"top\" expand=\"md\">\r\n                <NavbarToggler aria-label=\"Menu\" onClick={toggleMenu} />\r\n                <Brand/>\r\n                <Collapse isOpen={menuOpen} navbar>\r\n                    <Nav>\r\n                        <NavItem>\r\n                            <NavLink href=\"/\">Trang chủ</NavLink>\r\n                        </NavItem>\r\n                        <UncontrolledDropdown nav inNavbar>\r\n                            <DropdownToggle nav caret>Yếu tố</DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem href=\"/physical\">Thể lực</DropdownItem>\r\n                                <DropdownItem href=\"/technical\">Kỹ thuật</DropdownItem>\r\n                                <DropdownItem href=\"/psychophysiology\">Tâm-sinh lý</DropdownItem>\r\n                                <DropdownItem href=\"/form\">Hình thái</DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                        <NavItem>\r\n                            <NavLink href=\"/athlete-classification\">Phân loại trình độ tập luyện</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/rankings\">Bảng xếp hạng</NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}","F:\\ReactJS Project\\training-level-classification\\src\\components\\layout\\header\\header-components.jsx",["95","96","97","98","99"],"import React from \"react\";\r\nimport { Col, NavbarBrand, NavItem, NavLink, Row } from \"reactstrap\";\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const Brand = props => (\r\n    <NavbarBrand href=\"/\" className=\"brand-logo\">\r\n      <span className=\"brand-title\">TrainingLevel100m</span>\r\n    </NavbarBrand>\r\n  );\r\n\r\nexport const Home = props => (\r\n    <div className=\"padding-title\">\r\n        <h2>Chào mừng đến với trang web đánh giá trình độ tập luyện của các VĐV chạy 100m cấp cao </h2>\r\n    </div>\r\n);","F:\\ReactJS Project\\training-level-classification\\src\\components\\layout\\footer\\footer.jsx",[],{"ruleId":"100","severity":1,"message":"101","line":9,"column":10,"nodeType":"102","messageId":"103","endLine":9,"endColumn":18},{"ruleId":"100","severity":1,"message":"104","line":10,"column":10,"nodeType":"102","messageId":"103","endLine":10,"endColumn":21},{"ruleId":"100","severity":1,"message":"105","line":11,"column":8,"nodeType":"102","messageId":"103","endLine":11,"endColumn":14},{"ruleId":"100","severity":1,"message":"106","line":12,"column":8,"nodeType":"102","messageId":"103","endLine":12,"endColumn":14},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"100","severity":1,"message":"111","line":6,"column":10,"nodeType":"102","messageId":"103","endLine":6,"endColumn":17},{"ruleId":"107","replacedBy":"112"},{"ruleId":"109","replacedBy":"113"},{"ruleId":"100","severity":1,"message":"114","line":3,"column":18,"nodeType":"102","messageId":"103","endLine":3,"endColumn":27},{"ruleId":"100","severity":1,"message":"115","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":16},{"ruleId":"100","severity":1,"message":"115","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":16},{"ruleId":"100","severity":1,"message":"115","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":16},{"ruleId":"100","severity":1,"message":"115","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":16},{"ruleId":"100","severity":1,"message":"115","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":16},{"ruleId":"100","severity":1,"message":"116","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":13},{"ruleId":"100","severity":1,"message":"117","line":2,"column":82,"nodeType":"102","messageId":"103","endLine":2,"endColumn":93},{"ruleId":"100","severity":1,"message":"118","line":2,"column":128,"nodeType":"102","messageId":"103","endLine":2,"endColumn":131},{"ruleId":"100","severity":1,"message":"119","line":2,"column":133,"nodeType":"102","messageId":"103","endLine":2,"endColumn":159},{"ruleId":"100","severity":1,"message":"120","line":3,"column":21,"nodeType":"102","messageId":"103","endLine":3,"endColumn":25},{"ruleId":"100","severity":1,"message":"121","line":4,"column":16,"nodeType":"102","messageId":"103","endLine":4,"endColumn":20},{"ruleId":"100","severity":1,"message":"116","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":13},{"ruleId":"100","severity":1,"message":"122","line":2,"column":28,"nodeType":"102","messageId":"103","endLine":2,"endColumn":35},{"ruleId":"100","severity":1,"message":"123","line":2,"column":37,"nodeType":"102","messageId":"103","endLine":2,"endColumn":44},{"ruleId":"100","severity":1,"message":"118","line":2,"column":46,"nodeType":"102","messageId":"103","endLine":2,"endColumn":49},{"ruleId":"100","severity":1,"message":"120","line":3,"column":21,"nodeType":"102","messageId":"103","endLine":3,"endColumn":25},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'createStore' is defined but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"'connect' is defined but never used.",["124"],["125"],"'Container' is defined but never used.","'render' is defined but never used.","'Col' is defined but never used.","'NavbarBrand' is defined but never used.","'Row' is defined but never used.","'UncontrolledButtonDropdown' is defined but never used.","'Link' is defined but never used.","'Home' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","no-global-assign","no-unsafe-negation"]